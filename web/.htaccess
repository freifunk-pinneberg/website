#####
#
# Example .htaccess file for TYPO3 CMS - for use with Apache Webserver
#
# This file includes settings for the following configuration options:
#
# - Compression
# - Caching
# - MIME types
# - Cross Origin requests
# - Rewriting and Access
# - Miscellaneous
# - PHP optimisation
#
# If you want to use it, you have to copy it to the root folder of your TYPO3 installation (if its
# not there already) and rename it to '.htaccess'. To make .htaccess files work, you might need to
# adjust the 'AllowOverride' directive in your Apache configuration file.
#
# IMPORTANT: You may need to change this file depending on your TYPO3 installation!
#            Consider adding this file's content to your webserver's configuration directly for speed improvement
#
# Lots of the options are taken from https://github.com/h5bp/html5-boilerplate/blob/master/dist/.htaccess
#
####

### ------ Text basierte Dateien komprimieren - Begin ------ ###
<IfModule mod_deflate.c>
	### Kompression für bestimmte MIME types
	AddOutputFilterByType DEFLATE text/html text/xml text/css text/plain
	AddOutputFilterByType DEFLATE image/svg+xml application/xhtml+xml application/xml
	AddOutputFilterByType DEFLATE application/rdf+xml application/rss+xml application/atom+xml
	AddOutputFilterByType DEFLATE text/javascript application/javascript application/x-javascript
	AddOutputFilterByType DEFLATE application/x-font-ttf application/x-font-otf
	AddOutputFilterByType DEFLATE font/truetype font/opentype
	### Kompression für bestimmte Dateien
	<FilesMatch "\.(js|css|woff|woff2|ttf|eot|svg)$">
		SetOutputFilter DEFLATE
	</FilesMatch>
</IfModule>
### ------ Text basierte Dateien komprimieren - end ------ ###

### MIME type setzen
AddType application/font-ttf .ttf
AddType application/font-eot .eot
AddType application/font-otf .otf
AddType application/font-woff .woff
AddType application/font-woff2 .woff2
AddType image/svg+xml .svg

### ------ Browser caching - begin ------ ###
### Enable long browser caching for JavaScript, image and CSS files.
<FilesMatch "\.(js|css|png|jpg|jpeg|gif|mp4|webm|ogv|woff|woff2|ttf|eot|pdf|svg|svgz)$">
	<IfModule mod_expires.c>
		ExpiresActive on
		ExpiresDefault "access plus 60 days"
	</IfModule>
	### Set ETag
	FileETag MTime Size
</FilesMatch>
### ------ Browser caching - end ------ ###


### Begin: Compression via TYPO3 ###

# Compressing resource files will save bandwidth and so improve loading speed especially for users
# with slower internet connections. TYPO3 can compress the .js and .css files for you.
# *) Uncomment the following lines and
# *) Set $GLOBALS['TYPO3_CONF_VARS']['BE']['compressionLevel'] = 9 for the Backend
# *) Set $GLOBALS['TYPO3_CONF_VARS']['FE']['compressionLevel'] = 9 together with the TypoScript properties
#    config.compressJs and config.compressCss for GZIP compression of Frontend JS and CSS files.

#<FilesMatch "\.js\.gzip$">
#	AddType "text/javascript" .gzip
#</FilesMatch>
#<FilesMatch "\.css\.gzip$">
#	AddType "text/css" .gzip
#</FilesMatch>
#AddEncoding gzip .gzip

### End: Compression via TYPO3 ###


### Begin: Browser caching of ressource files ###

# Enable long browser caching for JavaScript and CSS files.

# This affects Frontend and Backend and increases performance.
# You can also add other file extensions (like gif, png, jpg), if you want them to be longer cached, too.

### End: Browser caching of ressource files ###



### Begin: Rewriting and Access ###

# You need rewriting, if you use a URL-Rewriting extension (RealURL, CoolUri).

<IfModule mod_rewrite.c>

	# Enable URL rewriting
	RewriteEngine On

	# RSS Feed
	RewriteRule rss.xml index.php?type=200 [L]

	# Alte Domain
	RewriteCond %{HTTP_HOST} ^freifunk-pinneberg\.de$
	RewriteRule ^(.*)$ https://pinneberg.freifunk.net/$1 [R=301,L]

	RewriteCond %{HTTP_HOST} ^www.freifunk-pinneberg\.de$
	RewriteRule ^(.*)$ https://pinneberg.freifunk.net/$1 [R=301,L]

	# WWW entfernen
	RewriteCond %{HTTP_HOST} ^www\.pinneberg\.freifunk\.net$
	RewriteRule ^(.*)$ https://pinneberg.freifunk.net/$1 [R=301,L]

	# HTTP nach HTTPS
	#RewriteCond %{SERVER_PORT}   !^443$
	#RewriteRule  (.*)  https://%{HTTP_HOST}/$1   [R=301,L]

	# Store the current location in an environment variable CWD to use
	# mod_rewrite in .htaccess files without knowing the RewriteBase
	RewriteCond $0#%{REQUEST_URI} ([^#]*)#(.*)\1$
	RewriteRule ^.*$ - [E=CWD:%2]

	# Rules to set ApplicationContext based on hostname
	RewriteCond %{HTTP_HOST} ^pinneberg\.freifunk\.net\.local$
	RewriteRule .? - [E=TYPO3_CONTEXT:Development]

	# Rule for versioned static files, configured through:
	# - $GLOBALS['TYPO3_CONF_VARS']['BE']['versionNumberInFilename']
	# - $GLOBALS['TYPO3_CONF_VARS']['FE']['versionNumberInFilename']
	# IMPORTANT: This rule has to be the very first RewriteCond in order to work!
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule ^(.+)\.(\d+)\.(php|js|css|png|jpg|gif|gzip)$ %{ENV:CWD}$1.$3 [L]

	# Access block for folders
	RewriteRule _(?:recycler|temp)_/ - [F]
	RewriteRule fileadmin/templates/.*\.(?:txt|ts)$ - [F]
	RewriteRule ^(?:vendor|typo3_src|typo3temp/var) - [F]
	RewriteRule (?:typo3conf/ext|typo3/sysext|typo3/ext)/[^/]+/(?:Configuration|Resources/Private|Tests?|Documentation|docs?)/ - [F]

	# Block access to all hidden files and directories with the exception of
	# the visible content from within the `/.well-known/` hidden directory (RFC 5785).
	RewriteCond %{REQUEST_URI} "!(^|/)\.well-known/([^./]+./?)+$" [NC]
	RewriteCond %{SCRIPT_FILENAME} -d [OR]
	RewriteCond %{SCRIPT_FILENAME} -f
	RewriteRule (?:^|/)\. - [F]

	# Stop rewrite processing, if we are in any other known directory
	# NOTE: Add your additional local storages here
	RewriteRule ^(?:fileadmin/|typo3conf/|typo3temp/|uploads/) - [L]

	# If the file/symlink/directory does not exist but is below /typo3/, redirect to the TYPO3 Backend entry point.
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteCond %{REQUEST_FILENAME} !-l
	RewriteRule ^typo3/(.*)$ %{ENV:CWD}typo3/index.php [QSA,L]

	### Begin: StaticFileCache (options) ####

    # Set proper content type and encoding for gzipped html.
    <FilesMatch "\.gzip$">
       SetEnv no-gzip 1
       SetEnv no-brotli 1
       <IfModule mod_headers.c>
          Header set Content-Encoding gzip
       </IfModule>
    </FilesMatch>
    <FilesMatch "\.gz$">
       SetEnv no-gzip 1
       SetEnv no-brotli 1
       <IfModule mod_headers.c>
          Header set Content-Encoding gzip
       </IfModule>
    </FilesMatch>
    <FilesMatch "\.br$">
       SetEnv no-gzip 1
       SetEnv no-brotli 1
       <IfModule mod_headers.c>
          Header set Content-Encoding br
       </IfModule>
    </FilesMatch>

    # if there are same problems with ForceType, please try the AddType alternative
    # Set proper content type gzipped html
    <FilesMatch "\.gzip$">
       ForceType text/html
       # AddType "text/html" .gzip
    </FilesMatch>
    <FilesMatch "\.js\.gzip$">
       ForceType text/javascript
       # AddType "text/javascript" .gzip
    </FilesMatch>
    <FilesMatch "\.js\.gz$">
       ForceType text/javascript
       # AddType "text/javascript" .gzip
    </FilesMatch>
    <FilesMatch "\.css\.gzip$">
       ForceType text/css
       # AddType "text/css" .gzip
    </FilesMatch>
    <FilesMatch "\.css\.gz$">
       ForceType text/css
       # AddType "text/css" .gzip
    </FilesMatch>
    <FilesMatch "\.xml\.gzip$">
       ForceType text/xml
       # AddType "text/xml" .gzip
    </FilesMatch>
    <FilesMatch "\.rss\.gzip$">
       ForceType text/xml
       # AddType "text/xml" .gzip
    </FilesMatch>
    <FilesMatch "\.gz$">
       ForceType text/html
       # AddType "text/html" .gz
    </FilesMatch>
    <FilesMatch "\.js\.gz$">
       ForceType text/javascript
       # AddType "text/javascript" .gz
    </FilesMatch>
    <FilesMatch "\.css\.gz$">
       ForceType text/css
       # AddType "text/css" .gz
    </FilesMatch>
    <FilesMatch "\.xml\.gz$">
       ForceType text/xml
       # AddType "text/xml" .gz
    </FilesMatch>
    <FilesMatch "\.rss\.gz$">
       ForceType text/xml
       # AddType "text/xml" .gz
    </FilesMatch>
    <FilesMatch "\.br$">
       ForceType text/html
       # AddType "text/html" .br
    </FilesMatch>
    <FilesMatch "\.xml\.br$">
       ForceType text/xml
       # AddType "text/xml" .br
    </FilesMatch>
    <FilesMatch "\.rss\.br$">
       ForceType text/xml
       # AddType "text/xml" .br
    </FilesMatch>

    # Avoid .br files being delivered with Content-Language: br headers
    <IfModule mod_mime.c>
       RemoveLanguage .br
    </IfModule>

    ### End: StaticFileCache ###


	# If the file/symlink/directory does not exist => Redirect to index.php.
	# For httpd.conf, you need to prefix each '%{REQUEST_FILENAME}' with '%{DOCUMENT_ROOT}'.
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteCond %{REQUEST_FILENAME} !-l
	RewriteRule ^.*$ %{ENV:CWD}index.php [QSA,L]

</IfModule>

# Access block for files
# Apache < 2.3
<IfModule !mod_authz_core.c>
	<FilesMatch "(?i:^\.|^#.*#|^(?:ChangeLog|ToDo|Readme|License)(?:\.md|\.txt)?|^composer\.(?:json|lock)|^ext_conf_template\.txt|^ext_typoscript_constants\.txt|^ext_typoscript_setup\.txt|flexform[^.]*\.xml|locallang[^.]*\.(?:xml|xlf)|\.(?:bak|co?nf|cfg|ya?ml|ts|typoscript|tsconfig|dist|fla|in[ci]|log|sh|sql(?:\..*)?|sqlite(?:\..*)?|sw[op]|git.*|rc)|.*~)$">
		Order allow,deny
		Deny from all
		Satisfy All
	</FilesMatch>
</IfModule>
# Apache ≥ 2.3
<IfModule mod_authz_core.c>
	<If "%{REQUEST_URI} =~ m#(?i:/\.|/\x23.*\x23|/(?:ChangeLog|ToDo|Readme|License)(?:\.md|\.txt)?|/composer\.(?:json|lock)|/ext_conf_template\.txt|/ext_typoscript_constants\.txt|/ext_typoscript_setup\.txt|flexform[^.]*\.xml|locallang[^.]*\.(?:xml|xlf)|\.(?:bak|co?nf|cfg|ya?ml|ts|typoscript|tsconfig|dist|fla|in[ci]|log|sh|sql(?:\..*)?|sqlite(?:\..*)?|sw[op]|git.*|rc)|.*~)$#">
		Require all denied
	</If>
</IfModule>

# Block access to vcs directories
<IfModule mod_alias.c>
	RedirectMatch 404 /\.(?:git|svn|hg)/
</IfModule>

### End: Rewriting and Access ###



### Begin: Miscellaneous ###

# 404 error prevention for non-existing redirected folders
Options -MultiViews

# Make sure that directory listings are disabled.
<IfModule mod_autoindex.c>
	Options -Indexes
</IfModule>

<IfModule mod_headers.c>
	# Force IE to render pages in the highest available mode
	Header set X-UA-Compatible "IE=edge"
	<FilesMatch "\.(appcache|avifs?|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svgz?|ttf|vcf|webapp|webm|webp|woff2?|xml|xpi)$">
		Header unset X-UA-Compatible
	</FilesMatch>

	# Reducing MIME type security risks
	Header set X-Content-Type-Options "nosniff"
</IfModule>

# ETag removal
<IfModule mod_headers.c>
	Header unset ETag
</IfModule>
FileETag None

### End: Miscellaneous ###


# Add your own rules here.
# ...

Redirect 301 /ffapi.json /freifunk-api.json
